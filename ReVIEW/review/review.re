//embed[html]{
<!-- 採番されないよう  {.unnumbered} を入れておく -->
//}

=[nonum] 実体験から学ぶ！ iOSDC Japan パンフレット記事入稿のコツ

== はじめに

初めてオンラインで開催された iOSDC Japan 2020 より、パンフレット記事の公募が開始されました。ありがたいことに、筆者はこれまで数多くの執筆の機会をいただきました。 DTP@<fn>{fn1}の知識が不足している状態からスタートし、 Adobe InDesign （以後、InDesign）や Re:VIEW といったツールを使い試行錯誤を重ねながら執筆してきました。

iOSDC Japan のパンフレット記事は、入稿用に出力された PDF ファイル、または Adobe Illustrator（以後、Illustrator） で生成可能な .ai ファイル、Adobe Photoshop （以後、Photoshop）で生成可能な .eps ファイルで入稿可能です。同人誌の入稿のようにフォントやレイアウトを一から自分で選べるというメリットがある一方で、組版や印刷関連の知識がある程度必要となります。

本稿では、iOSDC Japan パンフレット記事の執筆に興味がある方へ向けて、筆者のこれまでの経験をもとに、パンフレット記事を制作・入稿する上で覚えておくと良い知識や筆者が使用した経験のあるツールを使った入稿データ制作フローの紹介、パンフレット記事執筆の楽しさについて紹介します。

== 原稿制作ガイドについて

iOSDC Japan のパンフレット記事を執筆するにあたり、まずは@<b>{原稿制作ガイド}@<fn>{fn2}というドキュメントの内容を理解する必要があります。原稿制作ガイドには記事を入稿する上で必要な情報が数多く含まれるため、初めてパンフレット記事を執筆する方は記事の執筆前に必ず原稿制作ガイドに目を通しましょう。

== iOSDC Japan パンフレットのサイズ感

iOSDC Japan のパンフレットは、たて 297 mm、よこ 210 mm の A4 サイズです。これは一般的な同人誌で使用される B5 サイズ（257 mm × 182 mm）や A5 サイズ（148 mm × 210 mm）に比べるとやや大きなサイズです（@<b>{図 1}）。

//image[figure1][用紙サイズ (左からA4、B5、A5)][scale=1.0]{
//}

サイズが大きいため B5 に比べて紙面を広く使えますが、B5 サイズだと問題ないレイアウトでも A4 にそのまま適用すると合わないこともあるため、気になる場合はレイアウトの調整といった対応が必要となります。

== 知っておくと便利な印刷用語について

前述のとおり、原稿制作ガイドは入稿用データを作成する上で重要な情報が含まれています。ただ、これまで印刷物を作ったことがない方にとっては馴染みのない用語も多く登場することから、原稿制作ガイドを読み解く上で理解しておくと良い印刷用語について紹介します。

=== 裁ち落とし (たちおとし)

@<b>{裁ち落とし}は、印刷物を裁断する際の目安となるラインのことを指します。原稿制作ガイド内では@<b>{仕上がりライン}とも呼ばれています。

原稿制作ガイドでは、裁ち落とし位置は A4 サイズとイコールとなっています。ただし、実際の印刷工程では、 mm 単位での微妙な裁断ズレが生じる可能性があり、文字や図表が切れないようにするため、裁ち落としの位置から上下左右それぞれ 5 mm 内側に配置する必要があります。

=== 塗り足し (ぬりたし)

@<b>{塗り足し}は、裁ち落としの外側に伸ばす部分のことを指します。紙面いっぱいまで背景色が設定されている場合、裁ち落とし位置までしか色を塗っていない場合は裁断ズレによって紙の端に白い余白が生じる可能性があります。そのため、裁ち落とし位置から外側に余分に色を塗っておくことで白い余白ができないようにするために塗り足しを設定します。

原稿制作ガイドでは、塗り足しは上下左右それぞれ 3 mm と指定されています。パンフレット記事で紙面いっぱいまで色を塗りたい場合は忘れずに塗り足し位置いっぱいまで色を塗っておく必要があります。

=== 天、地、小口、のど

本を開いた際に上下左右のどの側を指すかを示す用語として、@<b>{天、地、小口、のど}という用語があります。天は本の上側、地は本の下側、小口は本の外側を、のどは本文を開いた際の本の中側のことを指します@<fn>{fn3}。天、地、小口、のどについては、 InDesign でマージンや裁ち落としを設定する際に出てきます。

原稿制作ガイドでは、のど側の余白については 15 mm と記載されており、本文や図表はのどから 15 mm 以上マージンを取る必要があります。

=== 解像度

@<b>{解像度}は、印刷の仕上がりを左右する重要な概念で、@<b>{dpi}（dots per inch）という単位で表されます。印刷所へ入稿する際には解像度が指定されることが多く、指定された解像度に満たない場合、印刷時に画像がぼやけてしまう可能性があります。原稿内で使用する画像については解像度を確認するようにしましょう。

原稿制作ガイドでは、 PDF に関する解像度の記載がありません。ただ、 Illustrator や Photoshop の場合は 350 〜 400 dpi と指定されていることから、PDF の場合も同様に 350 〜 400 dpi の解像度にしておくのが無難です。

=== CMYK

@<b>{CMYK} は、印刷物で使われる色の表現方式です。PC 上では @<b>{RGB} が一般的ですが、印刷物で CMYK が一般的なため、入稿時には RGB から CMYK への変換が必要です。また、CMYK へ変換した場合、RGB とは異なった色味になるため、変換後の色味が意図した通りになっているか念のために確認するとよいでしょう。

原稿制作ガイドでは、Illustrator や Photoshop では CMYK が指定されており、PDF においても同様に CMYK で入稿するのが無難です。

=== iOSDC Japan パンフレット記事特有の制約

印刷物を作る上で一般的な用語を紹介しましたが、iOSDC Japan のパンフレット記事においてはもう一つ気をつけるべきことがあります。

パンフレット記事は、文字通りパンフレットの構成物の一部です。全てのパンフレット記事の下部にはページ番号・著者名・タイトルが入るようになっており、これらの情報が入ることを想定してページ下部に特別な余白を設定する必要があります@<fn>{fn4}。

原稿制作ガイドによると、ページ下部には 17 mm の余白を取るよう指示されており、文字や図表が入らないよう設定する必要があります。

== 入稿用 PDF を作ってみる

ここまで紹介した内容を元に、iOSDC Japan パンフレット記事の入稿用 PDF を作成してみましょう。本稿では下記 2 種類のツールを使った方法について紹介します。

 * GUI 編集可能な DTP ツール（InDesign など）
 * オープンソースの組版ツール（Re:VIEW など）

利用するツールは、予算、共同執筆者の有無、紙面レイアウトの複雑さ、好みや習熟度に合わせて選択するとよいでしょう。

=== 本稿で作成するパンフレット記事の寸法について

入稿データの作成に入る前に、本稿で作成するパンフレット記事の寸法を定めます。文字や図表が切れないよう、原稿制作ガイドで決められた裁ち落としやマージンは確実に確保する必要があります。ただ、配置可能エリアいっぱいまで文字を配置するとやや窮屈な印象があったので、マージンは原稿制作ガイドのサイズより少し広めに取ることにしました。

筆者のパンフレット記事については、天、地、小口、のど（上、下、左、右）それぞれ 20 mm のマージンを設定しました（@<b>{図 2}）。また、スペースを有効活用するため、テキストは二段組（二列）のレイアウトを採用しました。

//image[figure2][本稿で出力するパンフレット記事の寸法][scale=1.0]{
//}

== Adobe InDesign を使用した入稿データ作成

ここからは GUI 編集可能な DTP ツールを用いて入稿データを作成する方法について紹介します。取り上げるツールは Adobe InDesign です。GUI エディタにより、実際の仕上がりをリアルタイムで確認しながら文章の追加やレイアウトの調整ができることや、レイアウトやフォントの変更といった細かいカスタマイズが可能、といったメリットがあります。

本稿では、入稿用データを作成する上で特に重要と筆者が考える、余白・裁ち落とし・塗り足しの設定、二段組レイアウトの設定、PDF 出力に絞って紹介します。本稿では取り上げていない設定を含め、作成したプロジェクトファイルを GitHub リポジトリ（後述）で配布しますので、詳しい設定が知りたい方は GitHub リポジトリをご覧ください。

なお、同様の機能を持つツールとして、Affinity Publisher という買い切りタイプのソフトウェアもあります。InDesign と同様に Affinity Publisher を使用したサンプルプロジェクトも GitHub リポジトリで配布しますので、興味がある方はご覧ください。

=== 余白・裁ち落とし・塗り足しの設定

@<b>{図 2}の寸法に準拠するために、プロジェクト作成後に InDesign 上で各種設定を行いましょう。

まずは余白の設定です。余白は一律 20 mm に設定したいので、@<b>{図 3}の左側画面のようにプロパティタブのマージン設定を 20 mm に設定すれば完了です。

//image[figure3][マージン、裁ち落とし（塗り足し）設定][scale=1.0]{
//}

次に裁ち落とし（仕上がりライン）ですが、本稿では多めに余白を設定しているため、裁ち落としを設ける必要がないことから、特に設定の必要はありません。

最後に塗り足しの設定ですが、InDesign ではプロパティタブで「レイアウトを調整」ボタンを押して表示した設定画面内で設定を行います（@<b>{図 3}の右側画面）。裁ち落とし設定の中で塗り足しの設定を行う点に注意が必要です。塗り足しは原稿制作ガイドの通り、一律 3 mm で設定しましょう。

=== 二段組レイアウトの設定

次に、二段組のレイアウト設定を行いましょう。横組み文字ツールで画面内にテキストフレームを配置後、配置したフレームを選択するとプロパティタブ内にテキストフレーム設定が表示されます（@<b>{図 4}）。設定左側に表示されている数字が段数設定なので、2 を設定すると、二段組レイアウトになります。

//image[figure4][段数設定][scale=1.0]{
//}

=== PDF 出力

原稿の執筆がある程度進んだら、入稿用の PDF ファイルを出力してみましょう。メニューバーから「ファイル」「書き出し」の順に選択し、書き出し設定を行う画面を開きましょう（@<b>{図 5}）。

//image[figure5][PDF出力設定（抜粋）][scale=1.0]{
//}

まずは、PDF 書き出しプリセットを「[PDF/X-1a:2001(日本)]」に設定します。PDF/X-1a:2001 は、印刷用途に最適化された PDF の規格です。プリセットを変更したことでその下の「標準」が「PDF/X-1a:2001」、「互換性」が「Acrobat 4 (PDF 1.3)」にそれぞれ変更されていることを確認して下さい。

次に、「一般」カテゴリーの「ページ」設定内にある、「書き出し」設定が「ページ」になっていることを確認してください。

最後に、「色分解」カテゴリーの「出力先」および「出力インテントのプロファイル」が「ドキュメントの CMYK スペース」になっていることを確認します。

以上の設定を確認した上で「書き出し」ボタンを押すと、入稿用の PDF ファイルが出力されます。

== Re:VIEW を使用した入稿データ作成

次に、オープンソースの組版ツールを使った入稿データ作成について紹介します。取り上げるツールは Re:VIEW です@<fn>{fn5}。

Re:VIEW は Markdown に似た独自文法を用いてレイアウトや装飾の指定が可能なことや、コマンド 1 つで手軽に入稿用の PDF ファイルが出力できるといった特徴があります。Re:VIEW では画像ファイル以外の本文・レイアウト定義などが全てテキストファイルで定義されており、バージョン管理ツールでの管理に向いている点や CI による自動化や複数人での原稿管理に適している点がメリットです。

本稿では、Docker で Re:VIEW の実行環境を構築する方法、Markdown 記法で執筆する方法、設定ファイル（config.yml）によるレイアウト設定について紹介します。InDesign と同じく後述する GitHub リポジトリでサンプルプロジェクトを配布しますので、興味がある方はご覧ください。

=== Docker Desktop で執筆環境を構築する

ローカルで PDF 出力まで行うためには、ローカルに Re:VIEW の実行環境を構築する必要があります。ただ、Docker Desktop をインストールしていれば、vvakame 氏が公開している Docker イメージ@<fn>{fn6}を使用して簡単に実行環境を構築できます。

下記 docker run コマンドを実行することで Re:VIEW のテンプレートプロジェクトが review ディレクトリに作成されます。

//emlist[][bash]{
% docker run --rm -v `pwd`/:/work vvakame/review:5.9 /bin/sh -c "cd work && review-init review"
//}

PDF を出力する場合は下記コマンドを実行します。

//emlist[][bash]{
% docker run --rm -v `pwd`/review:/work vvakame/review:5.9 /bin/sh -c "cd work && rake pdf"
//}

=== Markdown 記法で執筆する

Re:VIEW 文法ではなく、使い慣れた Markdown 記法で執筆したい場合は、pandoc2review というツールを利用すれば、Markdown 記法で記述された原稿ファイル（.md ファイル）を Re:VIEW 文法で書かれた原稿ファイル（.re ファイル）へ変換できます。前述した Docker イメージには既に pandoc2review がインストール済みです。

例えば、Markdown で執筆した原稿を review.md というファイル名で保存した場合、下記コマンドを用いることで PDF ファイルの生成まで行われます。

//emlist[][bash]{
% cd review
% docker run --rm -v `pwd`:/work vvakame/review:5.9 /bin/sh -c "cd work && pandoc2review review.md > review.re && rake pdf"
//}

=== 設定ファイル（config.yml）によるレイアウト設定

Re:VIEW のテンプレートプロジェクトは同人誌の出力に最適化されているため、iOSDC Japan のパンフレット記事のフォーマットに合わせるために設定を修正する必要があります。

Re:VIEW は PDF 出力する際に LaTeX を使用しており、高度なカスタマイズを行う場合は LaTeX の知識が必要となります。ただ、原稿制作ガイドに準拠するための最低限の設定だけで言えば、ページ番号の非表示以外の設定は config.yml という設定ファイルの変更で対応可能です@<fn>{fn7}。

config.yml で変更が必要な箇所はいくつかありますが、レイアウトや余白については texdocumentclass で設定します。

//indepimage[figure6]{
//}

下記は本稿を Re:VIEW で出力する際の texdocumentclass 設定の一例です。twocolumn は二段組設定、head_space は天（上）側の余白の大きさ、gutter はのど・小口側の余白の大きさを設定しています。地（下）側の余白を調整するため、number_of_lines（行数設定）を設定しています。

== おわりに 〜 パンフレット記事を書く楽しさについて

本稿では、iOSDC Japan のパンフレット記事を入稿するために知っておくとよい印刷用語の紹介や、Adobe InDesign および Re:VIEW を使った入稿用 PDF の作成方法について紹介しました。

iOSDC Japan のパンフレット記事は、決められたページ数と入稿時のファイル形式を守りさえすれば、内容やレイアウトにはほぼ制約がないという自由度の高さが特徴です。記事の内容だけでなく、フォントやレイアウトなど、記事の見せ方にもこだわりたい方にとっては最高の表現の場ではないでしょうか。

自由度が高い反面、完成度を求める場合には考慮すべき点が多く出てくるため、決して楽な作業ではないのは事実です。筆者も毎回ギリギリまで校正やレイアウト調整を行っていますが、頑張って入稿した記事が掲載された紙のパンフレットを手に取った時の感動は、毎回言葉では簡単に言い表せないものがあります。

あなたも、次回はパンフレット原稿の執筆にチャレンジしてみてはいかがでしょうか。本稿がパンフレット原稿の執筆に興味がある方の背中を押すような存在になれたら幸いです。

=== 本稿で扱ったサンプル一式の配布先（GitHub）

//image[qrcode][https://github.com/kotetuco/iOSDC-Japan-2025-Pamphlet-Sample][scale=1.0]{
//}

//footnote[fn1][Desk Top Publishing。PC 上で印刷物のデザインや編集を行うこと。]
//footnote[fn2][https://fortee.jp/iosdc-japan-2025/speaker/callfor/pamphlet/callfor から参照可能。]
//footnote[fn3][https://www.ddc.co.jp/words/archives/20050810220823.html]
//footnote[fn4][背景色を塗ることは可能です。]
//footnote[fn5][同様のツールとしては、他に Vivliostyle などがあります。]
//footnote[fn6][https://github.com/vvakame/docker-review]
//footnote[fn7][ページ番号の非表示は review-custom.sty の変更が必要になります。]
